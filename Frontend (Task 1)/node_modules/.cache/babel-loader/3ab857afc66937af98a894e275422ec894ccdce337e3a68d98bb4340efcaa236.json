{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mineminemine\\\\C# Projects\\\\Test_task\\\\Frontend (Task 1)\\\\src\\\\components\\\\UI\\\\button\\\\FetchButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FetchButton.css';\nimport { fetchProducts } from '../../../api/ProductsApi';\nimport FilterValue from '../filter/FilterValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchButton = ({\n  setProducts\n}) => {\n  _s();\n  const [filters, setFilters] = useState({});\n  const fetchData = async filtersArray => {\n    const products = await fetchProducts(filtersArray);\n    setProducts(products);\n  };\n  const handleFilterChange = (key, filterValue) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [key]: filterValue\n    }));\n  };\n  const validateCode = value => {\n    const isValid = Number.isInteger(Number(value));\n    setValidationError(!isValid);\n    return isValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fetch-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-value-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(FilterValue, {\n        label: \"Value\",\n        onChange: value => handleFilterChange('value', value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-value-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(FilterValue, {\n        label: \"Code\",\n        onChange: value => handleFilterChange('code', value),\n        validation: validateCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fetch-button\",\n      onClick: () => fetchData(filters),\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchButton, \"M/huLMwcoVa0VgrY6azekogMlDs=\");\n_c = FetchButton;\nexport default FetchButton;\nvar _c;\n$RefreshReg$(_c, \"FetchButton\");","map":{"version":3,"names":["React","useState","fetchProducts","FilterValue","jsxDEV","_jsxDEV","FetchButton","setProducts","_s","filters","setFilters","fetchData","filtersArray","products","handleFilterChange","key","filterValue","prevFilters","validateCode","value","isValid","Number","isInteger","setValidationError","className","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","validation","onClick","_c","$RefreshReg$"],"sources":["D:/Mineminemine/C# Projects/Test_task/Frontend (Task 1)/src/components/UI/button/FetchButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './FetchButton.css';\r\nimport { fetchProducts } from '../../../api/ProductsApi';\r\nimport FilterValue from '../filter/FilterValue';\r\n\r\nconst FetchButton = ({setProducts}) => {\r\n  const [filters, setFilters] = useState({});\r\n\r\n  const fetchData = async (filtersArray) => {\r\n      const products = await fetchProducts(filtersArray);\r\n      setProducts(products);\r\n  };\r\n\r\n  const handleFilterChange = (key, filterValue) => {\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [key]: filterValue\r\n    }));\r\n  };\r\n\r\n  const validateCode = (value) => {\r\n    const isValid = Number.isInteger(Number(value));\r\n    setValidationError(!isValid);\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"fetch-button-container\">\r\n      <div className=\"filter-value-wrapper\">\r\n        <FilterValue label=\"Value\" onChange={(value) => handleFilterChange('value', value)} />\r\n      </div>\r\n      <div className=\"filter-value-wrapper\">\r\n        <FilterValue label=\"Code\" onChange={(value) => handleFilterChange('code', value)} validation={validateCode}/>\r\n      </div>\r\n      <button className=\"fetch-button\" onClick={() => fetchData(filters)}>\r\n        Fetch Data\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,WAAW,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMU,SAAS,GAAG,MAAOC,YAAY,IAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMX,aAAa,CAACU,YAAY,CAAC;IAClDL,WAAW,CAACM,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,WAAW,KAAK;IAC/CN,UAAU,CAACO,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACF,GAAG,GAAGC;IACT,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,OAAO,GAAGC,MAAM,CAACC,SAAS,CAACD,MAAM,CAACF,KAAK,CAAC,CAAC;IAC/CI,kBAAkB,CAAC,CAACH,OAAO,CAAC;IAC5B,OAAOA,OAAO;EAChB,CAAC;EAED,oBACEf,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCpB,OAAA;MAAKmB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCpB,OAAA,CAACF,WAAW;QAACuB,KAAK,EAAC,OAAO;QAACC,QAAQ,EAAGR,KAAK,IAAKL,kBAAkB,CAAC,OAAO,EAAEK,KAAK;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACN1B,OAAA;MAAKmB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCpB,OAAA,CAACF,WAAW;QAACuB,KAAK,EAAC,MAAM;QAACC,QAAQ,EAAGR,KAAK,IAAKL,kBAAkB,CAAC,MAAM,EAAEK,KAAK,CAAE;QAACa,UAAU,EAAEd;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC,eACN1B,OAAA;MAAQmB,SAAS,EAAC,cAAc;MAACS,OAAO,EAAEA,CAAA,KAAMtB,SAAS,CAACF,OAAO,CAAE;MAAAgB,QAAA,EAAC;IAEpE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCIF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}