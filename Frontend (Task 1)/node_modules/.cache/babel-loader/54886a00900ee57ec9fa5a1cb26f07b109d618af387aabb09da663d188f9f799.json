{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mineminemine\\\\C# Projects\\\\Test_task\\\\Frontend (Task 1)\\\\src\\\\components\\\\ProductsInsertion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntityInputComponent = () => {\n  _s();\n  const [entities, setEntities] = useState([{\n    code: '',\n    value: ''\n  }]);\n  const handleChange = (index, key, value) => {\n    const newEntities = [...entities];\n    newEntities[index][key] = value;\n    setEntities(newEntities);\n  };\n  const handleAddEntity = () => {\n    setEntities([...entities, {\n      code: '',\n      value: ''\n    }]);\n  };\n  const handleRemoveEntity = index => {\n    const newEntities = entities.filter((_, i) => i !== index);\n    setEntities(newEntities);\n  };\n  const handleSubmit = () => {\n    const jsonData = entities.map(({\n      code,\n      value\n    }) => ({\n      [code]: value\n    }));\n    console.log(jsonData);\n    // Here you can send jsonData to the server\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [entities.map((entity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: entity.code,\n        onChange: e => handleChange(index, 'code', e.target.value),\n        placeholder: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: entity.value,\n        onChange: e => handleChange(index, 'value', e.target.value),\n        placeholder: \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveEntity(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddEntity,\n      children: \"Add Entity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityInputComponent, \"gZ4YWwi9sYiqmNAyAp+d8GcoTHE=\");\n_c = EntityInputComponent;\nexport default EntityInputComponent;\nvar _c;\n$RefreshReg$(_c, \"EntityInputComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EntityInputComponent","_s","entities","setEntities","code","value","handleChange","index","key","newEntities","handleAddEntity","handleRemoveEntity","filter","_","i","handleSubmit","jsonData","map","console","log","children","entity","type","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Mineminemine/C# Projects/Test_task/Frontend (Task 1)/src/components/ProductsInsertion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst EntityInputComponent = () => {\r\n  const [entities, setEntities] = useState([{ code: '', value: '' }]);\r\n\r\n  const handleChange = (index, key, value) => {\r\n    const newEntities = [...entities];\r\n    newEntities[index][key] = value;\r\n    setEntities(newEntities);\r\n  };\r\n\r\n  const handleAddEntity = () => {\r\n    setEntities([...entities, { code: '', value: '' }]);\r\n  };\r\n\r\n  const handleRemoveEntity = (index) => {\r\n    const newEntities = entities.filter((_, i) => i !== index);\r\n    setEntities(newEntities);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const jsonData = entities.map(({ code, value }) => ({ [code]: value }));\r\n    console.log(jsonData);\r\n    // Here you can send jsonData to the server\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {entities.map((entity, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            value={entity.code}\r\n            onChange={(e) => handleChange(index, 'code', e.target.value)}\r\n            placeholder=\"Code\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={entity.value}\r\n            onChange={(e) => handleChange(index, 'value', e.target.value)}\r\n            placeholder=\"Value\"\r\n          />\r\n          <button onClick={() => handleRemoveEntity(index)}>Remove</button>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddEntity}>Add Entity</button>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntityInputComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}