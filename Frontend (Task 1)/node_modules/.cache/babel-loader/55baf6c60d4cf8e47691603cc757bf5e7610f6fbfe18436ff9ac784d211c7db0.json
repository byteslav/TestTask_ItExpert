{"ast":null,"code":"const BASE_URL = 'https://localhost:7256/api/Products/';\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(BASE_URL + 'get-filtered-data');\n    if (!response.ok) {\n      throw new Error('Failed to fetch products');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error fetching products: ', error.message);\n    throw error;\n  }\n};\nexport const addProduct = async newProduct => {\n  try {\n    const response = await fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newProduct)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add product');\n    }\n    const addedProduct = await response.json();\n    return addedProduct;\n  } catch (error) {\n    console.error('Error adding product:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","fetchProducts","response","fetch","ok","Error","error","console","message","addProduct","newProduct","method","headers","body","JSON","stringify","addedProduct","json"],"sources":["D:/Mineminemine/C# Projects/Test_task/Frontend (Task 1)/src/api/ProductsApi.js"],"sourcesContent":["const BASE_URL = 'https://localhost:7256/api/Products/';\r\n\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(BASE_URL + 'get-filtered-data');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch products');\r\n    }\r\n    return response;\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching products: ', error.message);\r\n        throw error;\r\n  }\r\n};\r\n\r\nexport const addProduct = async (newProduct) => {\r\n  try {\r\n    const response = await fetch(BASE_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newProduct),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to add product');\r\n    }\r\n    const addedProduct = await response.json();\r\n    return addedProduct;\r\n  } catch (error) {\r\n    console.error('Error adding product:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,sCAAsC;AAEvD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAG,mBAAmB,CAAC;IAC5D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAOH,QAAQ;EAEf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD,MAAMF,KAAK;EACjB;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;MACrCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;IACjC,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMW,YAAY,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,MAAMF,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}